<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lian.dao.PoetryDao">
	<select id="getPoetriesNumByPoetName" resultType="int">
		select count(id) from poetries where poet_id in (select id from poets where name=#{poetName})
	</select>
	<select id="getPoetriesNumByTitle" resultType="int">
		select count(id) from poetries where title like CONCAT(CONCAT('%', #{title}), '%')
	</select>
	<select id="getPoetriesNumByContent" resultType="int">
		select count(id) from poetries where content like CONCAT(CONCAT('%', #{content}), '%')
	</select>

	<resultMap id="poetryMap" type="Poetry">
		<id property="id" column="poetry_id" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<association property="poet" javaType="Poet">
			<id property="id" column="poet_id" />
			<result property="name" column="name" />
		</association>
	</resultMap>

	<select id="getPoetriesByPoetName" resultMap="poetryMap">
		select
		a.id as poetry_id,
		a.title,
		a.content,
		b.id as poet_id,
		b.name
		from poetries a inner join poets b on a.poet_id = b.id 
		where b.name=#{poetName}
	</select>
	<select id="getPoetriesByTitle" resultMap="poetryMap">
		select
		a.id as poetry_id,
		a.title,
		a.content,
		b.id as poet_id,
		b.name
		from poetries a inner join poets b on a.poet_id = b.id 
		where title like CONCAT(CONCAT('%', #{title}), '%')
	</select>
	<select id="getPoetriesNumByContent" resultMap="poetryMap">
		select
		a.id as poetry_id,
		a.title,
		a.content,
		b.id as poet_id,
		b.name
		from poetries a inner join poets b on a.poet_id = b.id 
		where content like CONCAT(CONCAT('%', #{content}), '%')
	</select>

</mapper>